dnl Autoconf file for the matrixgl project 
dnl Copyright (C) 2009, 2010, 2011, 2012, 2013, 2014 Vincent Launchbury
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl 
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US

dnl Autoconf 2.69 required to build
AC_PREREQ([2.69])

dnl Project name, version and bug email
AC_INIT([matrixgl], [2.3.1], [vincent@doublecreations.com])

dnl Eliminate clutter with auxilary build directory
AC_CONFIG_AUX_DIR([build])

dnl These are automake options NOT gcc CFLAGS
AM_INIT_AUTOMAKE([-Wall -Werror])

dnl Name of any source file for a sanity check
AC_CONFIG_SRCDIR([src/matrix.c])

dnl config.h will be generated by autoconf
AC_CONFIG_HEADERS([src/config.h])

dnl List of Makefiles that will be
AC_CONFIG_FILES([Makefile
                 src/Makefile
                 src/data/Makefile
                 docs/Makefile])

dnl /usr/local isn't always in PATH, and /usr/local/share/man isn't always in
dnl MANPATH. This seems a more reliable default.
AC_PREFIX_DEFAULT([/usr])

dnl Programs
AC_PROG_CC
AM_PROG_CC_C_O
AC_PROG_INSTALL

dnl Library Stuff
AC_TYPE_SIZE_T
AC_CHECK_FUNCS([memset strtol])


dnl Check for X11 library
AC_PATH_X
if test "X$no_x" = "Xyes"; then
   echo "******************************************************************"
   echo "ERROR: X11 header files and/or libraries cannot be found. See the"
   echo "dependencies section of the README for details on how to fix this."
   echo "******************************************************************"
   exit 1
fi
AS_IF([test -n "$x_libraries"],
      [X11_CFLAGS="-I$x_includes"])
AC_SUBST(X11_CFLAGS)


dnl Check for GL and GLU libraries
AX_CHECK_GLU
if test "X$no_gl" = "Xyes"; then
   echo "******************************************************************"
   echo "ERROR: OpenGL header files and/or libraries cannot be found. See the"
   echo "dependencies section of the README for details on how to fix this."
   echo "******************************************************************"
   exit 1
fi
if test "X$no_glu" = "Xyes"; then
   echo "******************************************************************"
   echo "ERROR: OpenGL Utility Library (GLU) header files and/or libraries"
   echo "cannot be found. See the dependencies section of the README for"
   echo "details on how to fix this."
   echo "******************************************************************"
   exit 1
fi

dnl Add flag to WARN_CFLAGS if the C compiler supports it
AC_DEFUN([AX_ADD_WARN_CFLAG],
          [ ax_save_CFLAGS=$CFLAGS
            CFLAGS="$1 $CFLAGS"
            AC_MSG_CHECKING([if C compiler supports $1]);
            AC_LANG_PUSH([C])
            AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[ return 0; ]])],
                          [ax_found_flag=yes],
                          [ax_found_flag=no])
            AC_MSG_RESULT([$ax_found_flag])
            AS_IF([test x"$ax_found_flag" = x"yes"],
                  [WARN_CFLAGS="$WARN_CFLAGS $1"],
                  [])
            CFLAGS=$ax_save_CFLAGS
            AC_LANG_POP([C])])

dnl Set up warning CFLAGS
AX_ADD_WARN_CFLAG([-ansi])
AX_ADD_WARN_CFLAG([-pedantic])
AX_ADD_WARN_CFLAG([-Wall])
AX_ADD_WARN_CFLAG([-W])
AC_SUBST([WARN_CFLAGS])


dnl Let user disable XScreenSaver support
AC_ARG_WITH([xscreensaver],
            [AS_HELP_STRING([--without-xscreensaver],
                            [disable support for XScreenSaver])],
            [],
            [with_xscreensaver=yes])
AM_CONDITIONAL([USE_XSCREENSAVER],
               [test x"$with_xscreensaver" = x"yes"])

AC_MSG_CHECKING([if xscreensaver support is enabled])
AC_MSG_RESULT([$with_xscreensaver])


##
## Find xscreensaver directories
##
if test x"$with_xscreensaver" = x"yes"; then

   # Find the hack dir (i.e screensaver binaries)
   XSS_HACKS=''
   AC_MSG_CHECKING([for xscreensaver hack directory])
   for dir in /usr/lib/xscreensaver \
      /usr/lib/misc/xscreensaver \
      /usr/libexec/xscreensaver \
      /usr/local/lib/xscreensaver \
      /usr/local/lib/misc/xscreensaver \
      /usr/local/libexec/xscreensaver \
      /usr/local/bin/xscreensaver-hacks \
      /usr/bin/xscreensaver-hacks; do
      test -d $dir && XSS_HACKS=$dir && break
   done
   if test -n "$XSS_HACKS"; then
      AC_MSG_RESULT($XSS_HACKS)
   else
      AC_MSG_RESULT([no])
   fi
   AC_SUBST([XSS_HACKS])

   # Find the config dir (for per-screensaver XML config)
   XSS_CONF=''
   AC_MSG_CHECKING([for xscreensaver config directory])
   for dir in /usr/lib/xscreensaver/config \
      /usr/lib/X11/xscreensaver/config \
      /usr/share/xscreensaver/config \
      /usr/local/share/xscreensaver/config \
      /usr/share/xscreensaver ; do # PLD Linux
      test -d $dir && XSS_CONF=$dir && break
   done
   if test -n "$XSS_CONF"; then
      AC_MSG_RESULT($XSS_CONF)
   else
      AC_MSG_RESULT([no])
   fi
   AC_SUBST([XSS_CONF])

   if test -z "$XSS_HACKS" || test -z "$XSS_CONF"; then
      echo "***************************************************************"
      echo "ERROR: XScreenSaver directories cannot be found."
      echo "Use --without-xscreensaver to disable XScreenSaver support."
      echo "If you have XScreenSaver installed, please file a bug report as"
      echo "detailed in the README (our script generates a report for you!)"
      echo "***************************************************************"
      exit 1
   fi
fi

dnl And we're done
AC_OUTPUT

dnl Output a success message
if test x"$silent" != x"yes"; then
   echo "----------------------------------------------------------"
   echo "Package configuration was successful, type 'make' to build"
   echo "----------------------------------------------------------"
fi
